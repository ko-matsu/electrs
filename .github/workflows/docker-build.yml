name: Build and Publish image

on:
  push:
    tags:
      - 'v*'
  pull_request:
    types: [opened, reopened, synchronize]

env:
  # If you want to change the path, please set `secrets.IMAGE_PATH` .
  IMAGE_BASE_PATH: "ghcr.io/${{ github.repository_owner }}/electrs"

jobs:
  check_image_env:
    runs-on: ubuntu-20.04
    env:
      USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
    steps:
      - name: stop CI
        if: ${{ env.USERNAME == '' }}
        uses: andymckay/cancel-action@0.3
      - name: wait for stop CI
        if: ${{ env.USERNAME == '' }}
        shell: bash
        run: while true; do echo "Waiting for job to be cancelled"; sleep 5; done

  build_and_push_elements_image:
    runs-on: ubuntu-20.04
    needs: check_image_env
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Get the version
        id: get_version
        run: echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT
        shell: bash

      - name: image path
        id: image_path
        run: |
          if [ "${{ secrets.IMAGE_PATH }}" == "" ]; then
              IMAGE_PATH="${{env.IMAGE_BASE_PATH }}"
          else
              IMAGE_PATH="${{secrets.IMAGE_PATH}}"
          fi
          echo "IMAGE_PATH=$IMAGE_PATH"
          echo "IMAGE_PATH=$IMAGE_PATH" >> $GITHUB_OUTPUT

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: name=${{ steps.image_path.outputs.IMAGE_PATH }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=ref,event=tag
            type=semver,pattern={{raw}}
            type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build only
        if: ${{ github.event_name == 'pull_request' }}
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Run Trivy vulnerability scanner
        if: ${{ github.event_name != 'pull_request' }}
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ steps.image_path.outputs.IMAGE_PATH }}:${{ steps.get_version.outputs.VERSION }}
          format: table
          exit-code: 1
          severity: CRITICAL,HIGH

  build_and_push_bitcoin_image:
    runs-on: ubuntu-20.04
    needs: check_image_env
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Get the version
        id: get_version
        run: echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT
        shell: bash

      - name: image path
        id: image_path
        run: |
          if [ "${{ secrets.IMAGE_PATH }}" == "" ]; then
              IMAGE_PATH="${{env.IMAGE_BASE_PATH }}"
          else
              IMAGE_PATH="${{secrets.IMAGE_PATH}}"
          fi
          echo "IMAGE_PATH=$IMAGE_PATH"
          echo "IMAGE_PATH=$IMAGE_PATH" >> $GITHUB_OUTPUT

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: name=${{ steps.image_path.outputs.IMAGE_PATH }}
          # generate Docker tags based on the following events/attributes
          flavor: |
            latest=auto
            suffix=-bitcoin,onlatest=true
          tags: |
            type=ref,event=tag,suffix=-bitcoin
            type=semver,pattern={{raw}},suffix=-bitcoin
            type=sha,suffix=-bitcoin

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get nearest tagname
        if: ${{ github.event_name != 'pull_request' }}
        id: tagname
        run: echo ::set-output name=tagname::${GITHUB_REF/refs\/tags\//}

      - name: Build only
        if: ${{ github.event_name == 'pull_request' }}
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile_bitcoin
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile_bitcoin
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Run Trivy vulnerability scanner
        if: ${{ github.event_name != 'pull_request' }}
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ steps.image_path.outputs.IMAGE_PATH }}:${{ steps.get_version.outputs.VERSION }}
          format: table
          exit-code: 1
          severity: CRITICAL,HIGH
